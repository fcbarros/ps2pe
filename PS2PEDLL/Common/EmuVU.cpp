#include "EmuMain.h"
#include "EmuVU.h"

////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
// Variables
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////

EMU_U08 EmuVuMemory[EMU_VU_END_ADDR - EMU_VU_START_ADDR];

// Pointer to control1 registers
EMU_VU_Regs VU0Regs;
EMU_VU_Regs VU1Regs;

////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
// Functions
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////

void Emu_Vu_Init(void)
{
	Emu_Vu_Reset();
}

void Emu_Vu_Reset(void)
{
	memset(&VU0Regs, 0, sizeof(EMU_VU_Regs));
	memset(&VU1Regs, 0, sizeof(EMU_VU_Regs));

	VU0Regs.CPR[0].W.f = 1.0f;
	VU1Regs.CPR[0].W.f = 1.0f;
}

EMU_U08* Emu_Vu_GetPointer(EMU_U32 Address)
{
	return &EmuVuMemory[Address - EMU_VU_START_ADDR];
}
